plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral() // or jcenter()
	maven { url 'https://maven.fabricmc.net/' }
	maven { url 'https://repo.spongepowered.org/maven/' } // Add this if missing
}

loom {
	splitEnvironmentSourceSets()
	mods {
		"shit" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
		"tdbtd" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	runs {
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/client/generated")}"
			vmArg "-Dfabric-api.datagen.modid=shit"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/client/generated'
			]
		}
	}
}

dependencies {
	implementation 'org.jetbrains:annotations:24.0.0'
	implementation group: 'net.sourceforge.pmd', name: 'pmd-core', version: '6.42.0'

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	implementation 'org.spongepowered:mixin:0.8.2'

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	options.compilerArgs << "-Xlint:deprecation"
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}